<?phpclass a_configurar{	public static $DADOS_BRACO = 0.300;	public static $FATOR_CORRECAO = 5.000;	public static function validar(tester $tester, $array)	{		$dados_braco = safe($array['dados_braco']);		$fator_correcao = safe($array['fator_correcao']);		if ($tester->success())		{			$tester->isNotEmpty(100, $dados_braco, 		'Preencha o campo "Braço"');			$tester->isNotEmpty(101, $fator_correcao, 	'Preencha o campo "Fator de correção da força"');		}		if ($tester->success())		{			$tester->isNumericString(110, $dados_braco, 	'O campo "Braço" deve ser um número válido');			$tester->isNumericString(111, $fator_correcao, 	'O campo "Fator de correção da força" deve ser um número válido');		}				if ($tester->success())		{			$tester->isFloat(200, $dados_braco, 		'O campo "Braço" deve ser um número válido');			$tester->isFloat(201, $fator_correcao,		'O campo "Fator de correção da força" deve ser um número válido');		}	}	public static function carregar()	{		$data = file_get_contents(CONFIG_PATH . 'config.serialized.txt');		$data = json_decode($data);		if (filter_var($data[0], FILTER_VALIDATE_FLOAT))			a_configurar::$DADOS_BRACO = (float) $data[0];		if (filter_var($data[1], FILTER_VALIDATE_FLOAT))			a_configurar::$FATOR_CORRECAO = (float) $data[1];	}	public static function salvar($dados_braco, $fator_correcao)	{		$data = array($dados_braco, $fator_correcao);		$data = json_encode($data);		file_put_contents(CONFIG_PATH . 'config.serialized.txt', $data);	}	public static function url_form()	{		return PAGE_URL . 'configurar/index';	}	public static function url_salvar()	{		return PAGE_URL . 'configurar/salvar';	}}